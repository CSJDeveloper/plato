clients:

    # The total number of clients
    total_clients: 150

    # The number of clients selected in each round
    per_round: 10

    # Should the clients compute test accuracy locally?
    do_test: false


server:

    address: 127.0.0.1
    port: 8006

    do_test: false
    

data:
    # The training and testing dataset
    datasource: CIFAR10
    personalized_datasource: CIFAR10

    # Number of samples in each partition
    partition_size: 600
    test_partition_size: 600

    # IID or non-IID?
    sampler: noniid
    testset_sampler: noniid

    # personalized_sampler: noniid
    # personalized_testset_sampler: noniid

    # The concentration parameter for the Dirichlet distribution
    concentration: 0.3

    # The random seed for sampling data
    random_seed: 1

trainer:

    # The maximum number of training rounds
    rounds: 300

    # The maximum number of clients running concurrently
    max_concurrency: 2

    # The target accuracy
    target_accuracy: 0.9

    # Number of epoches for local training in each communication round
    epochs: 2
    batch_size: 256
    optimizer: SGD
    lr_scheduler: CosineAnnealingLR
    global_lr_scheduler: true
    loss_criterion: SwaVLoss

    # The machine learning model
    model_name: SwaV
    encoder_name: resnet_18

    projection_hidden_dim: 1024
    projection_out_dim: 256
    n_prototypes: 128

    global_modules_name:
        - encoder



algorithm:
    # Aggregation algorithm
    type: fedavg_partial
    #  - STL10 (Image size=96)
    #  - CIFAR10 (Image size=32)
    #  - MNIST (Image size=28)
    data_transforms:
        train_transform:
            name: SwaV
            parameters:
                crop_sizes: 
                    - 32
                    - 32

    completion_modules_name:
        - projection_head

    personalization:

        # Number of epochs for local training in each communication round
        #   The batch size for the downstream task can be larger as it
        # does not utilize the
        epochs: 40
        batch_size: 64
        optimizer: SGD
        lr_scheduler: MultiStepLR
        loss_criterion: CrossEntropyLoss

        model_type: general_multilayer
        model_name: linear_mlp

        logging_iteration_interval: 50
        logging_epoch_interval: 1
        model_logging_epoch_interval: 2

        # the ratio of clients participanting in training
        participant_clients_ratio: 0.66667

        # whether maintain and load the trained 
        # personalied model
        # set to be true, each client will load
        # the latest trained personalized model
        persist_personalized_model: False

        # do personalization 
        # for every `do_personalization_interval` rounds
        # set -1 to do personalized only after the final round
        do_personalization_interval: -1
        # total, participant, nonparticipant
        do_personalization_group: total


parameters:

    optimizer:
        lr: 0.01
        momentum: 0.9
        weight_decay: 0.0

    learning_rate:
        T_max: 600
        eta_min: 1.0E-3

    personalization:

        optimizer:
            lr: 0.05
            momentum: 0.9
            weight_decay: 0.0

        learning_rate:
            gamma: 0.3
            milestone_steps: 20ep,30ep

        loss_criterion:
            label_smoothing: 0.5

        model:
            num_classes: 10
